// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: proto/taskqueue.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ============================================
// ENUMS
// ============================================
type TaskStatus int32

const (
	TaskStatus_PENDING   TaskStatus = 0
	TaskStatus_RUNNING   TaskStatus = 1
	TaskStatus_COMPLETED TaskStatus = 2
	TaskStatus_FAILED    TaskStatus = 3
)

// Enum value maps for TaskStatus.
var (
	TaskStatus_name = map[int32]string{
		0: "PENDING",
		1: "RUNNING",
		2: "COMPLETED",
		3: "FAILED",
	}
	TaskStatus_value = map[string]int32{
		"PENDING":   0,
		"RUNNING":   1,
		"COMPLETED": 2,
		"FAILED":    3,
	}
)

func (x TaskStatus) Enum() *TaskStatus {
	p := new(TaskStatus)
	*p = x
	return p
}

func (x TaskStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_taskqueue_proto_enumTypes[0].Descriptor()
}

func (TaskStatus) Type() protoreflect.EnumType {
	return &file_proto_taskqueue_proto_enumTypes[0]
}

func (x TaskStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskStatus.Descriptor instead.
func (TaskStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_taskqueue_proto_rawDescGZIP(), []int{0}
}

type TaskPriority int32

const (
	TaskPriority_LOW    TaskPriority = 0
	TaskPriority_MEDIUM TaskPriority = 1
	TaskPriority_HIGH   TaskPriority = 2
)

// Enum value maps for TaskPriority.
var (
	TaskPriority_name = map[int32]string{
		0: "LOW",
		1: "MEDIUM",
		2: "HIGH",
	}
	TaskPriority_value = map[string]int32{
		"LOW":    0,
		"MEDIUM": 1,
		"HIGH":   2,
	}
)

func (x TaskPriority) Enum() *TaskPriority {
	p := new(TaskPriority)
	*p = x
	return p
}

func (x TaskPriority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskPriority) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_taskqueue_proto_enumTypes[1].Descriptor()
}

func (TaskPriority) Type() protoreflect.EnumType {
	return &file_proto_taskqueue_proto_enumTypes[1]
}

func (x TaskPriority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskPriority.Descriptor instead.
func (TaskPriority) EnumDescriptor() ([]byte, []int) {
	return file_proto_taskqueue_proto_rawDescGZIP(), []int{1}
}

// ============================================
// MESSAGES
// ============================================
type Task struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Payload       []byte                 `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	Priority      TaskPriority           `protobuf:"varint,4,opt,name=priority,proto3,enum=taskqueue.TaskPriority" json:"priority,omitempty"`
	MaxRetries    int32                  `protobuf:"varint,5,opt,name=max_retries,json=maxRetries,proto3" json:"max_retries,omitempty"`
	RetryCount    int32                  `protobuf:"varint,6,opt,name=retry_count,json=retryCount,proto3" json:"retry_count,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	StartedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	CompletedAt   *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	Status        TaskStatus             `protobuf:"varint,10,opt,name=status,proto3,enum=taskqueue.TaskStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_proto_taskqueue_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_proto_taskqueue_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_proto_taskqueue_proto_rawDescGZIP(), []int{0}
}

func (x *Task) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Task) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Task) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *Task) GetPriority() TaskPriority {
	if x != nil {
		return x.Priority
	}
	return TaskPriority_LOW
}

func (x *Task) GetMaxRetries() int32 {
	if x != nil {
		return x.MaxRetries
	}
	return 0
}

func (x *Task) GetRetryCount() int32 {
	if x != nil {
		return x.RetryCount
	}
	return 0
}

func (x *Task) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Task) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *Task) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *Task) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_PENDING
}

type SubmitTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Payload       []byte                 `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	Priority      TaskPriority           `protobuf:"varint,3,opt,name=priority,proto3,enum=taskqueue.TaskPriority" json:"priority,omitempty"`
	MaxRetries    int32                  `protobuf:"varint,4,opt,name=max_retries,json=maxRetries,proto3" json:"max_retries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitTaskRequest) Reset() {
	*x = SubmitTaskRequest{}
	mi := &file_proto_taskqueue_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitTaskRequest) ProtoMessage() {}

func (x *SubmitTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_taskqueue_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitTaskRequest.ProtoReflect.Descriptor instead.
func (*SubmitTaskRequest) Descriptor() ([]byte, []int) {
	return file_proto_taskqueue_proto_rawDescGZIP(), []int{1}
}

func (x *SubmitTaskRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SubmitTaskRequest) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *SubmitTaskRequest) GetPriority() TaskPriority {
	if x != nil {
		return x.Priority
	}
	return TaskPriority_LOW
}

func (x *SubmitTaskRequest) GetMaxRetries() int32 {
	if x != nil {
		return x.MaxRetries
	}
	return 0
}

type SubmitTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitTaskResponse) Reset() {
	*x = SubmitTaskResponse{}
	mi := &file_proto_taskqueue_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitTaskResponse) ProtoMessage() {}

func (x *SubmitTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_taskqueue_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitTaskResponse.ProtoReflect.Descriptor instead.
func (*SubmitTaskResponse) Descriptor() ([]byte, []int) {
	return file_proto_taskqueue_proto_rawDescGZIP(), []int{2}
}

func (x *SubmitTaskResponse) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type GetTaskStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaskStatusRequest) Reset() {
	*x = GetTaskStatusRequest{}
	mi := &file_proto_taskqueue_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskStatusRequest) ProtoMessage() {}

func (x *GetTaskStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_taskqueue_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskStatusRequest.ProtoReflect.Descriptor instead.
func (*GetTaskStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_taskqueue_proto_rawDescGZIP(), []int{3}
}

func (x *GetTaskStatusRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type GetTaskStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        TaskStatus             `protobuf:"varint,1,opt,name=status,proto3,enum=taskqueue.TaskStatus" json:"status,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaskStatusResponse) Reset() {
	*x = GetTaskStatusResponse{}
	mi := &file_proto_taskqueue_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskStatusResponse) ProtoMessage() {}

func (x *GetTaskStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_taskqueue_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskStatusResponse.ProtoReflect.Descriptor instead.
func (*GetTaskStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_taskqueue_proto_rawDescGZIP(), []int{4}
}

func (x *GetTaskStatusResponse) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_PENDING
}

func (x *GetTaskStatusResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetTaskResultRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaskResultRequest) Reset() {
	*x = GetTaskResultRequest{}
	mi := &file_proto_taskqueue_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskResultRequest) ProtoMessage() {}

func (x *GetTaskResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_taskqueue_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskResultRequest.ProtoReflect.Descriptor instead.
func (*GetTaskResultRequest) Descriptor() ([]byte, []int) {
	return file_proto_taskqueue_proto_rawDescGZIP(), []int{5}
}

func (x *GetTaskResultRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type GetTaskResultResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Task          *Task                  `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaskResultResponse) Reset() {
	*x = GetTaskResultResponse{}
	mi := &file_proto_taskqueue_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskResultResponse) ProtoMessage() {}

func (x *GetTaskResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_taskqueue_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskResultResponse.ProtoReflect.Descriptor instead.
func (*GetTaskResultResponse) Descriptor() ([]byte, []int) {
	return file_proto_taskqueue_proto_rawDescGZIP(), []int{6}
}

func (x *GetTaskResultResponse) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

// ============================================
// WORKER RPCS
// ============================================
type Subqueue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Priority      TaskPriority           `protobuf:"varint,2,opt,name=priority,proto3,enum=taskqueue.TaskPriority" json:"priority,omitempty"`
	Tasks         []*Task                `protobuf:"bytes,3,rep,name=tasks,proto3" json:"tasks,omitempty"`
	Capacity      int32                  `protobuf:"varint,4,opt,name=capacity,proto3" json:"capacity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Subqueue) Reset() {
	*x = Subqueue{}
	mi := &file_proto_taskqueue_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Subqueue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subqueue) ProtoMessage() {}

func (x *Subqueue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_taskqueue_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subqueue.ProtoReflect.Descriptor instead.
func (*Subqueue) Descriptor() ([]byte, []int) {
	return file_proto_taskqueue_proto_rawDescGZIP(), []int{7}
}

func (x *Subqueue) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Subqueue) GetPriority() TaskPriority {
	if x != nil {
		return x.Priority
	}
	return TaskPriority_LOW
}

func (x *Subqueue) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *Subqueue) GetCapacity() int32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

type Worker struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkerId      string                 `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	TaskTypes     []string               `protobuf:"bytes,2,rep,name=task_types,json=taskTypes,proto3" json:"task_types,omitempty"`
	Subqueues     []*Subqueue            `protobuf:"bytes,3,rep,name=subqueues,proto3" json:"subqueues,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Worker) Reset() {
	*x = Worker{}
	mi := &file_proto_taskqueue_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Worker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Worker) ProtoMessage() {}

func (x *Worker) ProtoReflect() protoreflect.Message {
	mi := &file_proto_taskqueue_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Worker.ProtoReflect.Descriptor instead.
func (*Worker) Descriptor() ([]byte, []int) {
	return file_proto_taskqueue_proto_rawDescGZIP(), []int{8}
}

func (x *Worker) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *Worker) GetTaskTypes() []string {
	if x != nil {
		return x.TaskTypes
	}
	return nil
}

func (x *Worker) GetSubqueues() []*Subqueue {
	if x != nil {
		return x.Subqueues
	}
	return nil
}

func (x *Worker) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type RegisterWorkerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Worker        *Worker                `protobuf:"bytes,1,opt,name=worker,proto3" json:"worker,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterWorkerRequest) Reset() {
	*x = RegisterWorkerRequest{}
	mi := &file_proto_taskqueue_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterWorkerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterWorkerRequest) ProtoMessage() {}

func (x *RegisterWorkerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_taskqueue_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterWorkerRequest.ProtoReflect.Descriptor instead.
func (*RegisterWorkerRequest) Descriptor() ([]byte, []int) {
	return file_proto_taskqueue_proto_rawDescGZIP(), []int{9}
}

func (x *RegisterWorkerRequest) GetWorker() *Worker {
	if x != nil {
		return x.Worker
	}
	return nil
}

type RegisterWorkerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterWorkerResponse) Reset() {
	*x = RegisterWorkerResponse{}
	mi := &file_proto_taskqueue_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterWorkerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterWorkerResponse) ProtoMessage() {}

func (x *RegisterWorkerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_taskqueue_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterWorkerResponse.ProtoReflect.Descriptor instead.
func (*RegisterWorkerResponse) Descriptor() ([]byte, []int) {
	return file_proto_taskqueue_proto_rawDescGZIP(), []int{10}
}

func (x *RegisterWorkerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterWorkerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type HeartbeatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkerId      string                 `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	mi := &file_proto_taskqueue_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_taskqueue_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_proto_taskqueue_proto_rawDescGZIP(), []int{11}
}

func (x *HeartbeatRequest) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

type HeartbeatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	mi := &file_proto_taskqueue_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_taskqueue_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_proto_taskqueue_proto_rawDescGZIP(), []int{12}
}

func (x *HeartbeatResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type FetchTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkerId      string                 `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	TaskTypes     []string               `protobuf:"bytes,2,rep,name=task_types,json=taskTypes,proto3" json:"task_types,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchTaskRequest) Reset() {
	*x = FetchTaskRequest{}
	mi := &file_proto_taskqueue_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchTaskRequest) ProtoMessage() {}

func (x *FetchTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_taskqueue_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchTaskRequest.ProtoReflect.Descriptor instead.
func (*FetchTaskRequest) Descriptor() ([]byte, []int) {
	return file_proto_taskqueue_proto_rawDescGZIP(), []int{13}
}

func (x *FetchTaskRequest) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *FetchTaskRequest) GetTaskTypes() []string {
	if x != nil {
		return x.TaskTypes
	}
	return nil
}

type FetchTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Task          *Task                  `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	HasTask       bool                   `protobuf:"varint,2,opt,name=has_task,json=hasTask,proto3" json:"has_task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchTaskResponse) Reset() {
	*x = FetchTaskResponse{}
	mi := &file_proto_taskqueue_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchTaskResponse) ProtoMessage() {}

func (x *FetchTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_taskqueue_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchTaskResponse.ProtoReflect.Descriptor instead.
func (*FetchTaskResponse) Descriptor() ([]byte, []int) {
	return file_proto_taskqueue_proto_rawDescGZIP(), []int{14}
}

func (x *FetchTaskResponse) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *FetchTaskResponse) GetHasTask() bool {
	if x != nil {
		return x.HasTask
	}
	return false
}

type SubmitResultRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Result        []byte                 `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitResultRequest) Reset() {
	*x = SubmitResultRequest{}
	mi := &file_proto_taskqueue_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitResultRequest) ProtoMessage() {}

func (x *SubmitResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_taskqueue_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitResultRequest.ProtoReflect.Descriptor instead.
func (*SubmitResultRequest) Descriptor() ([]byte, []int) {
	return file_proto_taskqueue_proto_rawDescGZIP(), []int{15}
}

func (x *SubmitResultRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *SubmitResultRequest) GetResult() []byte {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SubmitResultRequest) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type SubmitResultResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitResultResponse) Reset() {
	*x = SubmitResultResponse{}
	mi := &file_proto_taskqueue_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitResultResponse) ProtoMessage() {}

func (x *SubmitResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_taskqueue_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitResultResponse.ProtoReflect.Descriptor instead.
func (*SubmitResultResponse) Descriptor() ([]byte, []int) {
	return file_proto_taskqueue_proto_rawDescGZIP(), []int{16}
}

func (x *SubmitResultResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_proto_taskqueue_proto protoreflect.FileDescriptor

const file_proto_taskqueue_proto_rawDesc = "" +
	"\n" +
	"\x15proto/taskqueue.proto\x12\ttaskqueue\x1a\x1fgoogle/protobuf/timestamp.proto\"\x9f\x03\n" +
	"\x04Task\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x18\n" +
	"\apayload\x18\x03 \x01(\fR\apayload\x123\n" +
	"\bpriority\x18\x04 \x01(\x0e2\x17.taskqueue.TaskPriorityR\bpriority\x12\x1f\n" +
	"\vmax_retries\x18\x05 \x01(\x05R\n" +
	"maxRetries\x12\x1f\n" +
	"\vretry_count\x18\x06 \x01(\x05R\n" +
	"retryCount\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"started_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x12=\n" +
	"\fcompleted_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\vcompletedAt\x12-\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2\x15.taskqueue.TaskStatusR\x06status\"\x97\x01\n" +
	"\x11SubmitTaskRequest\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x18\n" +
	"\apayload\x18\x02 \x01(\fR\apayload\x123\n" +
	"\bpriority\x18\x03 \x01(\x0e2\x17.taskqueue.TaskPriorityR\bpriority\x12\x1f\n" +
	"\vmax_retries\x18\x04 \x01(\x05R\n" +
	"maxRetries\"-\n" +
	"\x12SubmitTaskResponse\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\"/\n" +
	"\x14GetTaskStatusRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\"\\\n" +
	"\x15GetTaskStatusResponse\x12-\n" +
	"\x06status\x18\x01 \x01(\x0e2\x15.taskqueue.TaskStatusR\x06status\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"/\n" +
	"\x14GetTaskResultRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\"<\n" +
	"\x15GetTaskResultResponse\x12#\n" +
	"\x04task\x18\x01 \x01(\v2\x0f.taskqueue.TaskR\x04task\"\x96\x01\n" +
	"\bSubqueue\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x123\n" +
	"\bpriority\x18\x02 \x01(\x0e2\x17.taskqueue.TaskPriorityR\bpriority\x12%\n" +
	"\x05tasks\x18\x03 \x03(\v2\x0f.taskqueue.TaskR\x05tasks\x12\x1a\n" +
	"\bcapacity\x18\x04 \x01(\x05R\bcapacity\"\xf1\x01\n" +
	"\x06Worker\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\tR\bworkerId\x12\x1d\n" +
	"\n" +
	"task_types\x18\x02 \x03(\tR\ttaskTypes\x121\n" +
	"\tsubqueues\x18\x03 \x03(\v2\x13.taskqueue.SubqueueR\tsubqueues\x12;\n" +
	"\bmetadata\x18\x04 \x03(\v2\x1f.taskqueue.Worker.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"B\n" +
	"\x15RegisterWorkerRequest\x12)\n" +
	"\x06worker\x18\x01 \x01(\v2\x11.taskqueue.WorkerR\x06worker\"L\n" +
	"\x16RegisterWorkerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"/\n" +
	"\x10HeartbeatRequest\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\tR\bworkerId\"-\n" +
	"\x11HeartbeatResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"N\n" +
	"\x10FetchTaskRequest\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\tR\bworkerId\x12\x1d\n" +
	"\n" +
	"task_types\x18\x02 \x03(\tR\ttaskTypes\"S\n" +
	"\x11FetchTaskResponse\x12#\n" +
	"\x04task\x18\x01 \x01(\v2\x0f.taskqueue.TaskR\x04task\x12\x19\n" +
	"\bhas_task\x18\x02 \x01(\bR\ahasTask\"\\\n" +
	"\x13SubmitResultRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x16\n" +
	"\x06result\x18\x02 \x01(\fR\x06result\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"0\n" +
	"\x14SubmitResultResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess*A\n" +
	"\n" +
	"TaskStatus\x12\v\n" +
	"\aPENDING\x10\x00\x12\v\n" +
	"\aRUNNING\x10\x01\x12\r\n" +
	"\tCOMPLETED\x10\x02\x12\n" +
	"\n" +
	"\x06FAILED\x10\x03*-\n" +
	"\fTaskPriority\x12\a\n" +
	"\x03LOW\x10\x00\x12\n" +
	"\n" +
	"\x06MEDIUM\x10\x01\x12\b\n" +
	"\x04HIGH\x10\x022\xfe\x01\n" +
	"\tTaskQueue\x12I\n" +
	"\n" +
	"SubmitTask\x12\x1c.taskqueue.SubmitTaskRequest\x1a\x1d.taskqueue.SubmitTaskResponse\x12R\n" +
	"\rGetTaskResult\x12\x1f.taskqueue.GetTaskResultRequest\x1a .taskqueue.GetTaskResultResponse\x12R\n" +
	"\rGetTaskStatus\x12\x1f.taskqueue.GetTaskStatusRequest\x1a .taskqueue.GetTaskStatusResponse2\xc7\x02\n" +
	"\rWorkerService\x12U\n" +
	"\x0eRegisterWorker\x12 .taskqueue.RegisterWorkerRequest\x1a!.taskqueue.RegisterWorkerResponse\x12F\n" +
	"\tFetchTask\x12\x1b.taskqueue.FetchTaskRequest\x1a\x1c.taskqueue.FetchTaskResponse\x12O\n" +
	"\fSubmitResult\x12\x1e.taskqueue.SubmitResultRequest\x1a\x1f.taskqueue.SubmitResultResponse\x12F\n" +
	"\tHeartbeat\x12\x1b.taskqueue.HeartbeatRequest\x1a\x1c.taskqueue.HeartbeatResponseB&Z$github.com/mateusmlo/taskqueue/protob\x06proto3"

var (
	file_proto_taskqueue_proto_rawDescOnce sync.Once
	file_proto_taskqueue_proto_rawDescData []byte
)

func file_proto_taskqueue_proto_rawDescGZIP() []byte {
	file_proto_taskqueue_proto_rawDescOnce.Do(func() {
		file_proto_taskqueue_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_taskqueue_proto_rawDesc), len(file_proto_taskqueue_proto_rawDesc)))
	})
	return file_proto_taskqueue_proto_rawDescData
}

var file_proto_taskqueue_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_taskqueue_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_proto_taskqueue_proto_goTypes = []any{
	(TaskStatus)(0),                // 0: taskqueue.TaskStatus
	(TaskPriority)(0),              // 1: taskqueue.TaskPriority
	(*Task)(nil),                   // 2: taskqueue.Task
	(*SubmitTaskRequest)(nil),      // 3: taskqueue.SubmitTaskRequest
	(*SubmitTaskResponse)(nil),     // 4: taskqueue.SubmitTaskResponse
	(*GetTaskStatusRequest)(nil),   // 5: taskqueue.GetTaskStatusRequest
	(*GetTaskStatusResponse)(nil),  // 6: taskqueue.GetTaskStatusResponse
	(*GetTaskResultRequest)(nil),   // 7: taskqueue.GetTaskResultRequest
	(*GetTaskResultResponse)(nil),  // 8: taskqueue.GetTaskResultResponse
	(*Subqueue)(nil),               // 9: taskqueue.Subqueue
	(*Worker)(nil),                 // 10: taskqueue.Worker
	(*RegisterWorkerRequest)(nil),  // 11: taskqueue.RegisterWorkerRequest
	(*RegisterWorkerResponse)(nil), // 12: taskqueue.RegisterWorkerResponse
	(*HeartbeatRequest)(nil),       // 13: taskqueue.HeartbeatRequest
	(*HeartbeatResponse)(nil),      // 14: taskqueue.HeartbeatResponse
	(*FetchTaskRequest)(nil),       // 15: taskqueue.FetchTaskRequest
	(*FetchTaskResponse)(nil),      // 16: taskqueue.FetchTaskResponse
	(*SubmitResultRequest)(nil),    // 17: taskqueue.SubmitResultRequest
	(*SubmitResultResponse)(nil),   // 18: taskqueue.SubmitResultResponse
	nil,                            // 19: taskqueue.Worker.MetadataEntry
	(*timestamppb.Timestamp)(nil),  // 20: google.protobuf.Timestamp
}
var file_proto_taskqueue_proto_depIdxs = []int32{
	1,  // 0: taskqueue.Task.priority:type_name -> taskqueue.TaskPriority
	20, // 1: taskqueue.Task.created_at:type_name -> google.protobuf.Timestamp
	20, // 2: taskqueue.Task.started_at:type_name -> google.protobuf.Timestamp
	20, // 3: taskqueue.Task.completed_at:type_name -> google.protobuf.Timestamp
	0,  // 4: taskqueue.Task.status:type_name -> taskqueue.TaskStatus
	1,  // 5: taskqueue.SubmitTaskRequest.priority:type_name -> taskqueue.TaskPriority
	0,  // 6: taskqueue.GetTaskStatusResponse.status:type_name -> taskqueue.TaskStatus
	2,  // 7: taskqueue.GetTaskResultResponse.task:type_name -> taskqueue.Task
	1,  // 8: taskqueue.Subqueue.priority:type_name -> taskqueue.TaskPriority
	2,  // 9: taskqueue.Subqueue.tasks:type_name -> taskqueue.Task
	9,  // 10: taskqueue.Worker.subqueues:type_name -> taskqueue.Subqueue
	19, // 11: taskqueue.Worker.metadata:type_name -> taskqueue.Worker.MetadataEntry
	10, // 12: taskqueue.RegisterWorkerRequest.worker:type_name -> taskqueue.Worker
	2,  // 13: taskqueue.FetchTaskResponse.task:type_name -> taskqueue.Task
	3,  // 14: taskqueue.TaskQueue.SubmitTask:input_type -> taskqueue.SubmitTaskRequest
	7,  // 15: taskqueue.TaskQueue.GetTaskResult:input_type -> taskqueue.GetTaskResultRequest
	5,  // 16: taskqueue.TaskQueue.GetTaskStatus:input_type -> taskqueue.GetTaskStatusRequest
	11, // 17: taskqueue.WorkerService.RegisterWorker:input_type -> taskqueue.RegisterWorkerRequest
	15, // 18: taskqueue.WorkerService.FetchTask:input_type -> taskqueue.FetchTaskRequest
	17, // 19: taskqueue.WorkerService.SubmitResult:input_type -> taskqueue.SubmitResultRequest
	13, // 20: taskqueue.WorkerService.Heartbeat:input_type -> taskqueue.HeartbeatRequest
	4,  // 21: taskqueue.TaskQueue.SubmitTask:output_type -> taskqueue.SubmitTaskResponse
	8,  // 22: taskqueue.TaskQueue.GetTaskResult:output_type -> taskqueue.GetTaskResultResponse
	6,  // 23: taskqueue.TaskQueue.GetTaskStatus:output_type -> taskqueue.GetTaskStatusResponse
	12, // 24: taskqueue.WorkerService.RegisterWorker:output_type -> taskqueue.RegisterWorkerResponse
	16, // 25: taskqueue.WorkerService.FetchTask:output_type -> taskqueue.FetchTaskResponse
	18, // 26: taskqueue.WorkerService.SubmitResult:output_type -> taskqueue.SubmitResultResponse
	14, // 27: taskqueue.WorkerService.Heartbeat:output_type -> taskqueue.HeartbeatResponse
	21, // [21:28] is the sub-list for method output_type
	14, // [14:21] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_proto_taskqueue_proto_init() }
func file_proto_taskqueue_proto_init() {
	if File_proto_taskqueue_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_taskqueue_proto_rawDesc), len(file_proto_taskqueue_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_taskqueue_proto_goTypes,
		DependencyIndexes: file_proto_taskqueue_proto_depIdxs,
		EnumInfos:         file_proto_taskqueue_proto_enumTypes,
		MessageInfos:      file_proto_taskqueue_proto_msgTypes,
	}.Build()
	File_proto_taskqueue_proto = out.File
	file_proto_taskqueue_proto_goTypes = nil
	file_proto_taskqueue_proto_depIdxs = nil
}
